{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workspace": {
      "type": "String"
    }
  },
  "resources": [
    {
      "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/5d5dfb1e-29d8-4568-bfa3-f7e4caad5162')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/5d5dfb1e-29d8-4568-bfa3-f7e4caad5162')]",
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "kind": "Scheduled",
      "apiVersion": "2022-10-01-preview",
      "properties": {
        "displayName": "Secret added to high privileged application",
        "alertRuleTemplateName": "5d5dfb1e-29d8-4568-bfa3-f7e4caad5162",
        "description": "A new secret was added to an high privileged application.\n\nCan contain false positives if a secret was deleted but there is still another secret present",
        "severity": "High",
        "enabled": true,
        "query": "// Needs custom watchlist HighRiskApps\n// Must contain objectId, name of all high priv apps (manual process)\n// objectId must be SearchKey\nAuditLogs\n| where OperationName has_any (\"Add service principal\", \"Certificates and secrets management\")\n| where Result =~ \"success\"\n| where tostring(InitiatedBy.user.userPrincipalName) has \"@\" or tostring(InitiatedBy.app.name) has \"@\"\n| extend targetname = tostring(TargetResources[0].name)\n| extend targetId = tostring(TargetResources[0].id)\n| extend targetType = tostring(TargetResources[0].type)\n| extend keyEvents = TargetResources[0].modifiedProperties\n| mv-expand keyEvents\n| where keyEvents.name =~ \"KeyDescription\"\n| extend new_value_set = parse_json(tostring(keyEvents.newValue))\n| extend old_value_set = parse_json(tostring(keyEvents.oldValue))\n| where old_value_set == \"[]\"\n| mv-expand new_value_set\n| parse new_value_set with * \"KeyIdentifier=\" keyIdentifier:string \",KeyType=\" keyType:string \",KeyUsage=\" keyUsage:string \",name=\" keyname:string \"]\" *\n| where keyUsage in (\"Verify\",\"\")\n| extend UserAgent = iff(AdditionalDetails[0].key == \"User-Agent\",tostring(AdditionalDetails[0].value),\"\")\n| extend InitiatingUserOrApp = iff(isnotempty(InitiatedBy.user.userPrincipalName),tostring(InitiatedBy.user.userPrincipalName), tostring(InitiatedBy.app.name))\n| extend InitiatingIpAddress = iff(isnotempty(InitiatedBy.user.ipAddress), tostring(InitiatedBy.user.ipAddress), tostring(InitiatedBy.app.ipAddress))\n| project-away new_value_set, old_value_set\n| project-reorder TimeGenerated, OperationName, InitiatingUserOrApp, InitiatingIpAddress, UserAgent, targetname, targetId, targetType, keyname, keyType, keyUsage, keyIdentifier, CorrelationId, TenantId\n| join kind=inner _GetWatchlist('HighRiskApps') on $left.targetId == $right.SearchKey\n| extend timestamp = TimeGenerated, AccountCustomEntity = InitiatingUserOrApp, IPCustomEntity = InitiatingIpAddress\n",
        "queryFrequency": "PT30M",
        "queryPeriod": "PT30M",
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "suppressionDuration": "PT5H",
        "suppressionEnabled": false,
        "tactics": [
          "CredentialAccess",
          "Persistence"
        ],
        "incidentConfiguration": {
          "groupingConfiguration": {
            "matchingMethod": "AllEntities",
            "enabled": false,
            "groupByEntities": [],
            "lookbackDuration": "PT5H",
            "reopenClosedIncident": false,
            "groupByCustomDetails": [],
            "groupByAlertDetails": []
          },
          "createIncident": true
        },
        "eventGroupingSettings": {
          "aggregationKind": "AlertPerResult"
        },
        "customDetails": {
          "Application": "targetname",
          "SecretTypeAdded": "keyType"
        },
        "entityMappings": [
          {
            "entityType": "Account",
            "fieldMappings": [
              {
                "identifier": "FullName",
                "columnName": "AccountCustomEntity"
              }
            ]
          },
          {
            "entityType": "IP",
            "fieldMappings": [
              {
                "identifier": "Address",
                "columnName": "IPCustomEntity"
              }
            ]
          }
        ]
      }
    }
  ]
}
